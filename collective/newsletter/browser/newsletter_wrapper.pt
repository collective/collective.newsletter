<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<metal:block use-macro="here/global_defines/macros/defines" />

<html xmlns="http://www.w3.org/1999/xhtml"
      xml:lang="en"
      lang="en"
      tal:define="global test view/test;
	              portal_state context/@@plone_portal_state;
				  site_properties context/portal_properties/site_properties;
				  object_title context/@@plone_context_state/object_title;
				  putils context/plone_utils;
	              language portal_state/language"
      tal:attributes="lang language;
                      xml:lang language">

  <head>
    <style>
      .documentActions,
      .documentByLine { display: none !important }
    </style>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"
          tal:define="charset site_properties/default_charset|string:utf-8"
          tal:attributes="content string:text/html;;charset=${charset}" />

    <title tal:define="portal_title context/portal_properties/title;
                       page_title object_title">
      <tal:pagetitle replace="page_title">
        Inserts page title
      </tal:pagetitle>
      &mdash;
      <tal:portaltitle replace="portal_title">
        Inserts portal title
      </tal:portaltitle>
    </title>

    <meta name="generator" content="Plone - http://plone.org" />

    <meta tal:define="metatags python:putils.listMetaTags(here).items()"
          tal:condition="metatags"
          tal:repeat="keyval metatags"
          tal:attributes="name python:keyval[0];
                          content python:keyval[1];" />

    <tal:fetcher define="stylesheets python:here.portal_css.getEvaluatedResources(here);
                         global portal_url here/portal_url;
                         pss modules/Products/PythonScripts/standard;
                         current_skin here/getCurrentSkinName;
                         skinname python:pss.url_quote(current_skin);">
      <tal:renderer tal:repeat="stylesheet stylesheets">
	<tal:typedef define="render stylesheet/getRendering | string:import">
          <style type="text/css"
		 tal:condition="python: render != 'link'"
		 tal:attributes="media stylesheet/getMedia | nothing;"

		 >
          </style>
	</tal:typedef>
      </tal:renderer>
    </tal:fetcher>

  </head>

  <body tal:define="isRTL portal_state/is_rtl"
        tal:attributes="class string: newsletter ${here/getSectionFromURL};
                        dir python:test(isRTL, 'rtl', 'ltr')">

    <div>

      <div id="content">
        <div class="documentContent" id="region-content">

          <a name="documentContent"></a>

	  <tal:render-object
	     define="base_url here/absolute_url;
		     layout python: view.getTargetObjectLayout(here);
		     thetemplate python: getattr(here, layout, None);">
			 <!-- tal:test replace="layout" /><br />
			 <tal:test replace="context" /><br /-->

			 <tal:render metal:use-macro="context/layout/macros/main" />

		     <!--
		     macros template/macros | nothing;
			 main_macro python: macros['content-core']">
	    <tal:render metal:use-macro="main_macro" /-->
	  </tal:render-object>

        </div>
      </div>

    </div>

  </body>

</html>
